 public class OsobaController : Controller
    {
        eKartonAPI _eKartonAPI = new eKartonAPI();

        public async Task<IActionResult> Index()
        {
            List<OsobaDTO> dto = new List<OsobaDTO>();

            HttpClient client = _eKartonAPI.InitializeClient();

            HttpResponseMessage res = await client.GetAsync("api/student");

            //Checking the response is successful or not which is sent using HttpClient  
            if (res.IsSuccessStatusCode)
            {
                //Storing the response details recieved from web api   
                var result = res.Content.ReadAsStringAsync().Result;

                //Deserializing the response recieved from web api and storing into the Employee list  
                dto = JsonConvert.DeserializeObject<List<OsobaDTO>>(result);

            }
            //returning the employee list to view  
            return View(dto);
        }

        // GET: Students/Create
        public IActionResult Create()
        {
            return View();
        }

        // POST: Students/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Create([Bind("OsobaID,Ime,Prezime,JMBG,DatumRodjenja,ImeOca,ImeMajke,KrvnaGrupa,Tezina,Visina,LBO")] OsobaDTO osoba)
        {
            if (ModelState.IsValid)
            {
                HttpClient client = _eKartonAPI.InitializeClient();

                var content = new StringContent(JsonConvert.SerializeObject(osoba), Encoding.UTF8, "application/json");
                HttpResponseMessage res = client.PostAsync("api/student", content).Result;
                if (res.IsSuccessStatusCode)
                {
                    return RedirectToAction("Index");
                }
            }
            return View(osoba);
        }

        // GET: Students/Edit/1
        public async Task<IActionResult> Edit(long? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            List<OsobaDTO> dto = new List<OsobaDTO>();
            HttpClient client = _eKartonAPI.InitializeClient();
            HttpResponseMessage res = await client.GetAsync("api/osoba");

            if (res.IsSuccessStatusCode)
            {
                var result = res.Content.ReadAsStringAsync().Result;
                dto = JsonConvert.DeserializeObject<List<OsobaDTO>>(result);
            }

            var student = dto.SingleOrDefault(m => m.OsobaID == id);
            if (student == null)
            {
                return NotFound();
            }

            return View(student);
        }

        // POST: Students/Edit/1
        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Edit(long id, [Bind("OsobaID, Ime, Prezime, JMBG, DatumRodjenja, ImeOca, ImeMajke, KrvnaGrupa, Tezina, Visina, LBO")] OsobaDTO osoba)
        {
            if (id != osoba.OsobaID)
            {
                return NotFound();
            }

            if (ModelState.IsValid)
            {
                HttpClient client = _eKartonAPI.InitializeClient();

                var content = new StringContent(JsonConvert.SerializeObject(osoba), Encoding.UTF8, "application/json");
                HttpResponseMessage res = client.PutAsync("api/osoba", content).Result;
                if (res.IsSuccessStatusCode)
                {
                    return RedirectToAction("Index");
                }
            }
            return View(osoba);
        }

        // GET: Students/Delete/1
        public async Task<IActionResult> Delete(long? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            List<OsobaDTO> dto = new List<OsobaDTO>();
            HttpClient client = _eKartonAPI.InitializeClient();
            HttpResponseMessage res = await client.GetAsync("api/osoba");

            if (res.IsSuccessStatusCode)
            {
                var result = res.Content.ReadAsStringAsync().Result;
                dto = JsonConvert.DeserializeObject<List<OsobaDTO>>(result);
            }

            var student = dto.SingleOrDefault(m => m.OsobaID == id);
            if (student == null)
            {
                return NotFound();
            }

            return View(student);
        }

        // POST: Students/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public IActionResult DeleteConfirmed(long id)
        {
            HttpClient client = _eKartonAPI.InitializeClient();
            HttpResponseMessage res = client.DeleteAsync($"api/osoba/{id}").Result;
            if (res.IsSuccessStatusCode)
            {
                return RedirectToAction("Index");
            }

            return NotFound();
        }
