// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKarton.Models.SQL;

namespace eKarton.Migrations
{
    [DbContext(typeof(MedicalRecordContext))]
    [Migration("20200120192929_MedicalRecordsMigration")]
    partial class MedicalRecordsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eKarton.Models.SQL.Allergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Anamnesis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SocioEpidemiologicalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Anamnesis");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnamnesisId")
                        .HasColumnType("int");

                    b.Property<string>("DiseaseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseDiscriminator")
                        .HasColumnType("int");

                    b.Property<string>("DiseaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisId");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacsimileNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("InstituteId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueCitizensIdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageType")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Institute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("eKarton.Models.SQL.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllergyId")
                        .HasColumnType("int");

                    b.Property<int?>("AnamnesisId")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("FathersMedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("MothersMedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccinationStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllergyId");

                    b.HasIndex("AnamnesisId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("FathersMedicalRecordId");

                    b.HasIndex("MothersMedicalRecordId")
                        .IsUnique()
                        .HasFilter("[MothersMedicalRecordId] IS NOT NULL");

                    b.HasIndex("PatientId");

                    b.HasIndex("VaccinationStatusId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Allergic")
                        .HasColumnType("bit");

                    b.Property<int?>("AllergyId")
                        .HasColumnType("int");

                    b.Property<string>("NameOfMedicine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AllergyId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HealthInsuranceNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MothersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfInsurance")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCitizensIdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("eKarton.Models.SQL.VaccinationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("VaccinationStatuses");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccinationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("VaccineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VaccinationStatusId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("eKarton.Models.SQL.VisitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("VisitEntity");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Disease", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Anamnesis", null)
                        .WithMany("Diseases")
                        .HasForeignKey("AnamnesisId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Doctor", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Institute", "Institute")
                        .WithMany("Doctors")
                        .HasForeignKey("InstituteId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Image", b =>
                {
                    b.HasOne("eKarton.Models.SQL.MedicalRecord", null)
                        .WithMany("Images")
                        .HasForeignKey("MedicalRecordId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.MedicalRecord", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Allergy", "Allergy")
                        .WithMany()
                        .HasForeignKey("AllergyId");

                    b.HasOne("eKarton.Models.SQL.Anamnesis", "Anamnesis")
                        .WithMany()
                        .HasForeignKey("AnamnesisId");

                    b.HasOne("eKarton.Models.SQL.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("eKarton.Models.SQL.MedicalRecord", "FathersMedicalRecord")
                        .WithMany()
                        .HasForeignKey("FathersMedicalRecordId");

                    b.HasOne("eKarton.Models.SQL.MedicalRecord", "MothersMedicalRecord")
                        .WithOne()
                        .HasForeignKey("eKarton.Models.SQL.MedicalRecord", "MothersMedicalRecordId");

                    b.HasOne("eKarton.Models.SQL.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("eKarton.Models.SQL.VaccinationStatus", "VaccinationStatus")
                        .WithMany()
                        .HasForeignKey("VaccinationStatusId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Medicine", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Allergy", null)
                        .WithMany("Medicines")
                        .HasForeignKey("AllergyId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vaccine", b =>
                {
                    b.HasOne("eKarton.Models.SQL.VaccinationStatus", null)
                        .WithMany("VaccineList")
                        .HasForeignKey("VaccinationStatusId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.VisitEntity", b =>
                {
                    b.HasOne("eKarton.Models.SQL.MedicalRecord", null)
                        .WithMany("Visits")
                        .HasForeignKey("MedicalRecordId");
                });
#pragma warning restore 612, 618
        }
    }
}
