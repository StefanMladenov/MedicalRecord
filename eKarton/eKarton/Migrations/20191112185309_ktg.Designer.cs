// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKarton.Models.SQL;

namespace eKarton.Migrations
{
    [DbContext(typeof(EKartonContext))]
    [Migration("20191112185309_ktg")]
    partial class ktg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eKarton.Models.SQL.Alergen", b =>
                {
                    b.Property<int>("AlergenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alergican")
                        .HasColumnType("bit");

                    b.Property<string>("ImeAlergena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KartonAlergenaID")
                        .HasColumnType("int");

                    b.HasKey("AlergenID");

                    b.HasIndex("KartonAlergenaID");

                    b.ToTable("Alergen");
                });

            modelBuilder.Entity("eKarton.Models.SQL.EKarton", b =>
                {
                    b.Property<int>("KartonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KartonAlergenaID")
                        .HasColumnType("int");

                    b.Property<int?>("KartonMajkeKartonID")
                        .HasColumnType("int");

                    b.Property<int?>("KartonOcaKartonID")
                        .HasColumnType("int");

                    b.Property<int?>("KartonVakcinacijeID")
                        .HasColumnType("int");

                    b.Property<int?>("LekarOsobaID")
                        .HasColumnType("int");

                    b.Property<int?>("PacijentOsobaID")
                        .HasColumnType("int");

                    b.HasKey("KartonID");

                    b.HasIndex("KartonAlergenaID");

                    b.HasIndex("KartonMajkeKartonID");

                    b.HasIndex("KartonOcaKartonID")
                        .IsUnique()
                        .HasFilter("[KartonOcaKartonID] IS NOT NULL");

                    b.HasIndex("KartonVakcinacijeID");

                    b.HasIndex("LekarOsobaID");

                    b.HasIndex("PacijentOsobaID");

                    b.ToTable("EKartoniLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.KartonAlergena", b =>
                {
                    b.Property<int>("KartonAlergenaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("KartonAlergenaID");

                    b.ToTable("KartoniAlergenaLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.KartonVakcinacije", b =>
                {
                    b.Property<int>("KartonVakcinacijeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("KartonVakcinacijeID");

                    b.ToTable("KartoniVakcinacijeLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lek", b =>
                {
                    b.Property<int>("LekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alergican")
                        .HasColumnType("bit");

                    b.Property<string>("ImeLeka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KartonAlergenaID")
                        .HasColumnType("int");

                    b.HasKey("LekID");

                    b.HasIndex("KartonAlergenaID");

                    b.ToTable("LekoviLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Osoba", b =>
                {
                    b.Property<int>("OsobaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("OsobaID");

                    b.ToTable("OsobeLista");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Osoba");
                });

            modelBuilder.Entity("eKarton.Models.SQL.PregledEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EKartonKartonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EKartonKartonID");

                    b.ToTable("PregledEntity");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Slika", b =>
                {
                    b.Property<int>("SlikaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EKartonKartonID")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipSlike")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SlikaID");

                    b.HasIndex("EKartonKartonID");

                    b.ToTable("SlikeLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vakcina", b =>
                {
                    b.Property<int>("VakcinaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVakcinacije")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImeVakcine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KartonVakcinacijeID")
                        .HasColumnType("int");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("VakcinaID");

                    b.HasIndex("KartonVakcinacijeID");

                    b.ToTable("VakcineLista");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lekar", b =>
                {
                    b.HasBaseType("eKarton.Models.SQL.Osoba");

                    b.Property<int>("BrFaksimila")
                        .HasColumnType("int");

                    b.Property<int>("GodineRadnogStaza")
                        .HasColumnType("int");

                    b.Property<string>("Ordinacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specijalizacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ustanova")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Lekar");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Pacijent", b =>
                {
                    b.HasBaseType("eKarton.Models.SQL.Osoba");

                    b.Property<string>("ImeMajke")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeOca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrvnaGrupa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LBO")
                        .HasColumnType("int");

                    b.Property<int>("Tezina")
                        .HasColumnType("int");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Pacijent");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Alergen", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonAlergena", null)
                        .WithMany("AlergeniLista")
                        .HasForeignKey("KartonAlergenaID");
                });

            modelBuilder.Entity("eKarton.Models.SQL.EKarton", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonAlergena", "KartonAlergena")
                        .WithMany()
                        .HasForeignKey("KartonAlergenaID");

                    b.HasOne("eKarton.Models.SQL.EKarton", "KartonMajke")
                        .WithMany()
                        .HasForeignKey("KartonMajkeKartonID");

                    b.HasOne("eKarton.Models.SQL.EKarton", "KartonOca")
                        .WithOne()
                        .HasForeignKey("eKarton.Models.SQL.EKarton", "KartonOcaKartonID");

                    b.HasOne("eKarton.Models.SQL.KartonVakcinacije", "KartonVakcinacije")
                        .WithMany()
                        .HasForeignKey("KartonVakcinacijeID");

                    b.HasOne("eKarton.Models.SQL.Lekar", "Lekar")
                        .WithMany()
                        .HasForeignKey("LekarOsobaID");

                    b.HasOne("eKarton.Models.SQL.Pacijent", "Pacijent")
                        .WithMany()
                        .HasForeignKey("PacijentOsobaID");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lek", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonAlergena", null)
                        .WithMany("LekoviLista")
                        .HasForeignKey("KartonAlergenaID");
                });

            modelBuilder.Entity("eKarton.Models.SQL.PregledEntity", b =>
                {
                    b.HasOne("eKarton.Models.SQL.EKarton", null)
                        .WithMany("PreglediLista")
                        .HasForeignKey("EKartonKartonID");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Slika", b =>
                {
                    b.HasOne("eKarton.Models.SQL.EKarton", null)
                        .WithMany("SlikeLista")
                        .HasForeignKey("EKartonKartonID");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vakcina", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonVakcinacije", null)
                        .WithMany("VakcineLista")
                        .HasForeignKey("KartonVakcinacijeID");
                });
#pragma warning restore 612, 618
        }
    }
}
