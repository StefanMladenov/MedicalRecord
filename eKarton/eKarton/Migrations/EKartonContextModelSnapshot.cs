// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKarton.Models.SQL;

namespace eKarton.Migrations
{
    [DbContext(typeof(EKartonContext))]
    partial class EKartonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eKarton.Models.SQL.Anamneza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SocioEpidemioloskiStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Anamneze");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Bolest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnamnezaId")
                        .HasColumnType("int");

                    b.Property<int>("BolestDiskriminator")
                        .HasColumnType("int");

                    b.Property<string>("NazivBolesti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifraBolesti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terapija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnamnezaId");

                    b.ToTable("Bolesti");
                });

            modelBuilder.Entity("eKarton.Models.SQL.EKarton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnamnezaId")
                        .HasColumnType("int");

                    b.Property<int?>("KartonAlergenaId")
                        .HasColumnType("int");

                    b.Property<int?>("KartonMajkeId")
                        .HasColumnType("int");

                    b.Property<int?>("KartonOcaId")
                        .HasColumnType("int");

                    b.Property<int?>("KartonVakcinacijeId")
                        .HasColumnType("int");

                    b.Property<int?>("LekarId")
                        .HasColumnType("int");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnamnezaId");

                    b.HasIndex("KartonAlergenaId");

                    b.HasIndex("KartonMajkeId");

                    b.HasIndex("KartonOcaId")
                        .IsUnique()
                        .HasFilter("[KartonOcaId] IS NOT NULL");

                    b.HasIndex("KartonVakcinacijeId");

                    b.HasIndex("LekarId");

                    b.HasIndex("PacijentId");

                    b.ToTable("EKartoni");
                });

            modelBuilder.Entity("eKarton.Models.SQL.KartonAlergena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hrana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ostalo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KartoniAlergena");
                });

            modelBuilder.Entity("eKarton.Models.SQL.KartonVakcinacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("KartoniVakcinacije");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alergican")
                        .HasColumnType("bit");

                    b.Property<string>("ImeLeka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KartonAlergenaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KartonAlergenaId");

                    b.ToTable("Lekovi");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lekar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrFaksimila")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Specijalizacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UstanovaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UstanovaId");

                    b.ToTable("Lekari");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Pacijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImeMajke")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeOca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LBO")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pol")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VidOsiguranja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("eKarton.Models.SQL.PregledEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EKartonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EKartonId");

                    b.ToTable("PregledEntity");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Slika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EKartonId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipSlike")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EKartonId");

                    b.ToTable("Slike");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Ustanova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ustanove");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vakcina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVakcinacije")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImeVakcine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KartonVakcinacijeId")
                        .HasColumnType("int");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KartonVakcinacijeId");

                    b.ToTable("Vakcine");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Bolest", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Anamneza", null)
                        .WithMany("Bolesti")
                        .HasForeignKey("AnamnezaId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.EKarton", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Anamneza", "Anamneza")
                        .WithMany()
                        .HasForeignKey("AnamnezaId");

                    b.HasOne("eKarton.Models.SQL.KartonAlergena", "KartonAlergena")
                        .WithMany()
                        .HasForeignKey("KartonAlergenaId");

                    b.HasOne("eKarton.Models.SQL.EKarton", "KartonMajke")
                        .WithMany()
                        .HasForeignKey("KartonMajkeId");

                    b.HasOne("eKarton.Models.SQL.EKarton", "KartonOca")
                        .WithOne()
                        .HasForeignKey("eKarton.Models.SQL.EKarton", "KartonOcaId");

                    b.HasOne("eKarton.Models.SQL.KartonVakcinacije", "KartonVakcinacije")
                        .WithMany()
                        .HasForeignKey("KartonVakcinacijeId");

                    b.HasOne("eKarton.Models.SQL.Lekar", "Lekar")
                        .WithMany()
                        .HasForeignKey("LekarId");

                    b.HasOne("eKarton.Models.SQL.Pacijent", "Pacijent")
                        .WithMany()
                        .HasForeignKey("PacijentId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lek", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonAlergena", null)
                        .WithMany("Lekovi")
                        .HasForeignKey("KartonAlergenaId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Lekar", b =>
                {
                    b.HasOne("eKarton.Models.SQL.Ustanova", "Ustanova")
                        .WithMany("Lekari")
                        .HasForeignKey("UstanovaId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.PregledEntity", b =>
                {
                    b.HasOne("eKarton.Models.SQL.EKarton", null)
                        .WithMany("PreglediLista")
                        .HasForeignKey("EKartonId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Slika", b =>
                {
                    b.HasOne("eKarton.Models.SQL.EKarton", null)
                        .WithMany("SlikeLista")
                        .HasForeignKey("EKartonId");
                });

            modelBuilder.Entity("eKarton.Models.SQL.Vakcina", b =>
                {
                    b.HasOne("eKarton.Models.SQL.KartonVakcinacije", null)
                        .WithMany("VakcineLista")
                        .HasForeignKey("KartonVakcinacijeId");
                });
#pragma warning restore 612, 618
        }
    }
}
